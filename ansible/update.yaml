- hosts: localhost

  vars:
    sed_mysql_args_regexp: s/DATABASE_URL=mysql:\/\/([^:]+):([^@]+)@([^:]+):([^\/]+)\/(.+)/-u \1 -p\2 -h \3 -P \4 \5/
    remote_path: /var/www

    sg_name: getfursu.it-backend
    vpc_id: vpc-6d051916

  tasks:
  - shell: curl -4 http://ifconfig.co/ip
    register: ip_output
    args:
      warn: false

  - ec2_group:
      name: "{{ sg_name }}"
      description: getfursu.it backend
      vpc_id: "{{ vpc_id }}"
      rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ipv6: ::/0
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ ip_output.stdout_lines[0] }}/32"

  - set_fact: db_params={{ lookup('ini', 'DATABASE_URL type=properties file=../.env.local')|urlsplit }}

  - block:
    - tempfile:
      register: sql_file

    - expect:
        command: mysqldump
                   --add-drop-table
                   --create-options
                   --default-character-set=utf8mb4
                   --skip-disable-keys
                   --skip-extended-insert
                   --skip-dump-date
                   --skip-comments
                   --skip-lock-tables
                   --skip-add-locks
                   --order-by-primary
                   --quote-names
                   --tz-utc

                   --host={{ db_params.hostname }}
                   --port={{ db_params.port }}
                   --user={{ db_params.username }}
                   --password

                   --result-file={{ sql_file.path }}

          {{ db_params.path|replace('/', '') }}
        responses:
          password: "{{ db_params.password }}"

    - shell: ssh {{ backend_server_ip }} -C 'mysql $(grep DATABASE_URL= {{ remote_path }}/.env | sed -r "{{ sed_mysql_args_regexp }}")' < {{ sql_file.path }}

    always:
    - file:
        state: absent
        path: "{{ sql_file.path }}"
