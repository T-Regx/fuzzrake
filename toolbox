#!/usr/bin/env bash

set -euo pipefail

PROJECT_NAME="${FUZZRAKE_DEV_PROJECT_NAME:-fuzzrake}"
IMPORT_DIR_PATH='var/iuFormData/' # Trailing slash required

pushd "$(dirname "$(realpath "$0")")"

function run_command() {
    echo "Executing: $*"

    "$@"
}

function run_docker_compose() {
    run_command docker compose --project-directory docker --project-name "$PROJECT_NAME" "$@"
}

function run_docker_compose_exec() {
    run_docker_compose exec --user "$(echo -n "$(id -u):$(id -g)")" -ti php "$@"
}

function run_composer() {
    run_docker_compose_exec composer "$@"
}

function run_console() {
    run_docker_compose_exec ./bin/console "$@"
}

function assure_line_in_file() {
    local filepath="$1"
    local pattern="$2"
    local default="$3"

    grep -q "$pattern" "$filepath" || {
        echo "Appending '$default' to '$filepath'"
        echo "$default" >> "$filepath"
    }
}

function run_setup() {
    # FIXME: https://github.com/veelkoov/fuzzrake/issues/168
    run_command sudo mkdir -p ./var/cache
    run_command sudo mkdir -p ./var/log
    run_command sudo chmod -R a+w ./var
    run_command touch ./var/db.sqlite

    assure_line_in_file ./.env.local      '^GOOGLE_RECAPTCHA_SITE_KEY=' 'GOOGLE_RECAPTCHA_SITE_KEY=__TODO_PROVIDE_THIS__'
    assure_line_in_file ./.env.local      '^GOOGLE_RECAPTCHA_SECRET='   'GOOGLE_RECAPTCHA_SECRET=__TODO_PROVIDE_THIS__'

    assure_line_in_file ./.env.test.local '^GOOGLE_RECAPTCHA_SITE_KEY=' 'GOOGLE_RECAPTCHA_SITE_KEY=__TODO_PROVIDE_THIS__'
    assure_line_in_file ./.env.test.local '^GOOGLE_RECAPTCHA_SECRET='   'GOOGLE_RECAPTCHA_SECRET=__TODO_PROVIDE_THIS__'
}

function error() {
    local message="$1"

    echo "ERROR: $message" >&2
    echo ''
    usage
    exit 1
}

function usage() {
    cat << EOF
Usage:
    $0 ACTION [arguments ...]

Available actions:

    setup        setup and/or fix required filesystem items and/or settings

    docker-up    "ups" the Docker Compose project
    docker-down  "downs" the Docker Compose project

    yep          execute 'yarn encore production'

    composer     run Composer

    console      run Symfony console command

    cc           clear cache

    pu           run PHPUnit tests
    pus          run PHPUnit tests, "small" group
    pum          run PHPUnit tests, "medium" group
    pul          run PHPUnit tests, "large" group

    pcf          run PHP CS Fixer
    ps           run PHPStan
    rector       run Rector
EOF
}

function action() {
    [[ $# -ge 1 ]] || error 'Not enough arguments'

    local action="$1"
    shift

    case $action in
        'setup')        run_setup ;;
        'docker-up')    run_docker_compose up --detach --build ;;
        'docker-down')  run_docker_compose down ;;

        'yep')          yarn encore production ;;

        'composer')     run_composer "$@" ;;

        'console')      run_console "$@" ;;

        # FIXME: https://github.com/veelkoov/fuzzrake/issues/168
        'cc')           run_command sudo rm -rf ./var/cache/* ;;
        'cc-prod')      run_command ssh getfursu.it sudo rm -rf /var/www/prod/var/cache/prod ;;

        'pu')           run_docker_compose_exec ./bin/phpunit --testdox "$@" ;;
        'pus')          action pu --group small  "$@" ;;
        'pum')          action pu --group medium "$@" ;;
        'pul')          action pu --group large  "$@" ;;

        'pcf')          run_docker_compose_exec ./vendor/bin/php-cs-fixer fix "$@" ;;
        'ps')           run_docker_compose_exec ./vendor/bin/phpstan analyse -c phpstan.neon "$@" ;;
        'rector')       run_docker_compose_exec ./vendor/bin/rector process "$@" ;;

        'cst')          run_console app:status-tracker:run "$@" ;;
        'cstc')         action cst --commit "$@" ;;
        'cstr')         action cst --refetch "$@" ;;

        'tidy')         run_console app:data:tidy "$@" ;;
        'tidyc')        action tidy --commit "$@" ;;

        'release-beta')
            run_command git branch -D beta
            run_command git checkout -b beta
            run_command git push --force origin beta
            run_command ansible/setup_envs.yaml --limit beta_env

            echo 'Make sure to return to the previous branch' # FIXME: This stupid limitation
        ;;

        'release-prod')
            run_command git checkout main
            run_command git merge --no-edit develop
            run_command git push
            run_command git checkout develop
            run_command git merge main
            run_command git push
            run_command ansible/setup_envs.yaml --limit prod_env
        ;;

        'get-snapshots')
            run_command rsync --recursive --progress --human-readable --compress --checksum \
                getfursu.it:/var/www/prod/var/snapshots/ var/snapshots/
        ;;
        'get-submissions')
            . .env.local
            run_command rsync --recursive --progress --human-readable --compress --checksum \
                getfursu.it:/var/www/prod/var/iuFormData/ "$IMPORT_DIR_PATH"
            run_command aws s3 sync --size-only "${S3_COPIES_BUCKET_URL%/}/" "$IMPORT_DIR_PATH"
        ;;

        *) error "Unknown action: '$action'" ;;
    esac
}

action "$@"
